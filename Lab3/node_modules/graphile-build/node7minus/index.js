"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MutationPayloadQueryPlugin = exports.ClientMutationIdDescriptionPlugin = exports.MutationPlugin = exports.QueryPlugin = exports.NodePlugin = exports.StandardTypesPlugin = exports.defaultPlugins = exports.buildSchema = exports.getBuilder = undefined;

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _getIterator2 = require("babel-runtime/core-js/get-iterator");

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _util = require("util");

var _util2 = _interopRequireDefault(_util);

var _SchemaBuilder = require("./SchemaBuilder");

var _SchemaBuilder2 = _interopRequireDefault(_SchemaBuilder);

var _plugins = require("./plugins");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getBuilder = exports.getBuilder = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(plugins) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var builder, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, plugin;

    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            builder = new _SchemaBuilder2.default();
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            _context.prev = 4;
            _iterator = (0, _getIterator3.default)(plugins);

          case 6:
            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
              _context.next = 17;
              break;
            }

            plugin = _step.value;

            if (!(typeof plugin !== "function")) {
              _context.next = 10;
              break;
            }

            throw new Error("Expected a list of plugin functions, instead list contained a non-function: " + _util2.default.inspect(plugin));

          case 10:
            builder._setPluginName(plugin.displayName || plugin.name);
            _context.next = 13;
            return plugin(builder, options);

          case 13:
            builder._setPluginName(null);

          case 14:
            _iteratorNormalCompletion = true;
            _context.next = 6;
            break;

          case 17:
            _context.next = 23;
            break;

          case 19:
            _context.prev = 19;
            _context.t0 = _context["catch"](4);
            _didIteratorError = true;
            _iteratorError = _context.t0;

          case 23:
            _context.prev = 23;
            _context.prev = 24;

            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }

          case 26:
            _context.prev = 26;

            if (!_didIteratorError) {
              _context.next = 29;
              break;
            }

            throw _iteratorError;

          case 29:
            return _context.finish(26);

          case 30:
            return _context.finish(23);

          case 31:
            return _context.abrupt("return", builder);

          case 32:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, undefined, [[4, 19, 23, 31], [24,, 26, 30]]);
  }));

  return function getBuilder(_x2) {
    return _ref.apply(this, arguments);
  };
}();

var buildSchema = exports.buildSchema = function () {
  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(plugins) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var builder;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return getBuilder(plugins, options);

          case 2:
            builder = _context2.sent;
            return _context2.abrupt("return", builder.buildSchema());

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, undefined);
  }));

  return function buildSchema(_x4) {
    return _ref2.apply(this, arguments);
  };
}();

var defaultPlugins = exports.defaultPlugins = [_plugins.StandardTypesPlugin, _plugins.NodePlugin, _plugins.QueryPlugin, _plugins.MutationPlugin, _plugins.ClientMutationIdDescriptionPlugin, _plugins.MutationPayloadQueryPlugin];

exports.StandardTypesPlugin = _plugins.StandardTypesPlugin;
exports.NodePlugin = _plugins.NodePlugin;
exports.QueryPlugin = _plugins.QueryPlugin;
exports.MutationPlugin = _plugins.MutationPlugin;
exports.ClientMutationIdDescriptionPlugin = _plugins.ClientMutationIdDescriptionPlugin;
exports.MutationPayloadQueryPlugin = _plugins.MutationPayloadQueryPlugin;
//# sourceMappingURL=index.js.map