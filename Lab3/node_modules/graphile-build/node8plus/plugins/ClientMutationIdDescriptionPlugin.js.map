{"version":3,"sources":["../../src/plugins/ClientMutationIdDescriptionPlugin.js"],"names":["ClientMutationIdDescriptionPlugin","builder","hook","field","extend","scope","isMutationInput","fieldName","Self","description","name","isMutationPayload","args","isRootMutation","input"],"mappings":";;;;;;;;;;;;kBAGgB,SAASA,iCAAT,CACdC,OADc,EAEd;AACAA,UAAQC,IAAR,CACE,qCADF,EAEE,CACEC,KADF,EAEE,EAAEC,MAAF,EAFF,EAGE,EAAEC,OAAO,EAAEC,eAAF,EAAmBC,SAAnB,EAAT,EAAyCC,IAAzC,EAHF,KAIK;AACH,QACE,CAACF,eAAD,IACAC,cAAc,kBADd,IAEAJ,MAAMM,WAHR,EAIE;AACA,aAAON,KAAP;AACD;AACD,QAAI,CAACA,KAAD,IAAU,CAACK,IAAf,EAAqB;AACnB,eADmB,CACV;AACV;AACD,WAAOJ,OACLD,KADK,EAEL;AACEM,mBACE;AAFJ,KAFK,EAMJ,aAAYN,MAAMO,IAAN,IAAc,EAAG,eAAcF,KAAKE,IAAK,GANjD,CAAP;AAQD,GAzBH;;AA4BAT,UAAQC,IAAR,CACE,gCADF,EAEE,CACEC,KADF,EAEE,EAAEC,MAAF,EAFF,EAGE,EAAEC,OAAO,EAAEM,iBAAF,EAAqBJ,SAArB,EAAT,EAA2CC,IAA3C,EAHF,KAIK;AACH,QACE,CAACG,iBAAD,IACAJ,cAAc,kBADd,IAEAJ,MAAMM,WAHR,EAIE;AACA,aAAON,KAAP;AACD;AACD,QAAI,CAACA,KAAD,IAAU,CAACK,IAAf,EAAqB;AACnB,eADmB,CACV;AACV;AACD,WAAOJ,OACLD,KADK,EAEL;AACEM,mBACE;AAFJ,KAFK,EAMJ,aAAYN,MAAMO,IAAN,IAAc,EAAG,eAAcF,KAAKE,IAAK,GANjD,CAAP;AAQD,GAzBH;;AA4BAT,UAAQC,IAAR,CACE,qCADF,EAEE,CAACU,IAAD,EAAW,EAAER,MAAF,EAAX,EAAuB,EAAEC,OAAO,EAAEQ,cAAF,EAAT,EAA6BL,IAA7B,EAAmCL,KAAnC,EAAvB,KAAsE;AACpE,QAAI,CAACU,cAAD,IAAmB,CAACD,KAAKE,KAAzB,IAAkCF,KAAKE,KAAL,CAAWL,WAAjD,EAA8D;AAC5D,aAAOG,IAAP;AACD;AACD,QAAI,CAACT,KAAD,IAAU,CAACK,IAAf,EAAqB;AACnB,eADmB,CACV;AACV;AACD,WAAO,sBAAc,EAAd,EAAkBI,IAAlB,EAAwB;AAC7BE,aAAOV,OACLQ,KAAKE,KADA,EAEL;AACEL,qBACE;AAFJ,OAFK,EAMJ,gDACCN,MAAMO,IACP,eAAcF,KAAKE,IAAK,GARpB;AADsB,KAAxB,CAAP;AAYD,GArBH;AAuBD,C","file":"ClientMutationIdDescriptionPlugin.js","sourcesContent":["// @flow\nimport type SchemaBuilder, { Plugin } from \"../SchemaBuilder\";\n\nexport default (function ClientMutationIdDescriptionPlugin(\n  builder: SchemaBuilder\n) {\n  builder.hook(\n    \"GraphQLInputObjectType:fields:field\",\n    (\n      field: { name?: string },\n      { extend },\n      { scope: { isMutationInput, fieldName }, Self }\n    ) => {\n      if (\n        !isMutationInput ||\n        fieldName !== \"clientMutationId\" ||\n        field.description\n      ) {\n        return field;\n      }\n      if (!field || !Self) {\n        debugger // eslint-disable-line\n      }\n      return extend(\n        field,\n        {\n          description:\n            \"An arbitrary string value with no semantic meaning. Will be included in the payload verbatim. May be used to track mutations by the client.\",\n        },\n        `Tweaking '${field.name || \"\"}' field in '${Self.name}'`\n      );\n    }\n  );\n\n  builder.hook(\n    \"GraphQLObjectType:fields:field\",\n    (\n      field: { name?: string },\n      { extend },\n      { scope: { isMutationPayload, fieldName }, Self }\n    ) => {\n      if (\n        !isMutationPayload ||\n        fieldName !== \"clientMutationId\" ||\n        field.description\n      ) {\n        return field;\n      }\n      if (!field || !Self) {\n        debugger // eslint-disable-line\n      }\n      return extend(\n        field,\n        {\n          description:\n            \"The exact same `clientMutationId` that was provided in the mutation input, unchanged and unused. May be used by a client to track mutations.\",\n        },\n        `Tweaking '${field.name || \"\"}' field in '${Self.name}'`\n      );\n    }\n  );\n\n  builder.hook(\n    \"GraphQLObjectType:fields:field:args\",\n    (args: {}, { extend }, { scope: { isRootMutation }, Self, field }) => {\n      if (!isRootMutation || !args.input || args.input.description) {\n        return args;\n      }\n      if (!field || !Self) {\n        debugger // eslint-disable-line\n      }\n      return Object.assign({}, args, {\n        input: extend(\n          args.input,\n          {\n            description:\n              \"The exclusive input argument for this mutation. An object type, make sure to see documentation for this objectâ€™s fields.\",\n          },\n          `Adding a description to input arg for field '${\n            field.name\n          }' field in '${Self.name}'`\n        ),\n      });\n    }\n  );\n}: Plugin);\n"]}