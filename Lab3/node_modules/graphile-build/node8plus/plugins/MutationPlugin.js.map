{"version":3,"sources":["../../src/plugins/MutationPlugin.js"],"names":["isValidMutation","Mutation","getFields","length","e","MutationPlugin","builder","hook","schema","newWithHooks","extend","graphql","GraphQLObjectType","name","description","isRootMutation","mutation"],"mappings":";;;;;;;;;;;;AAGA,SAASA,eAAT,CAAyBC,QAAzB,EAAmC;AACjC,MAAI;AACF,QAAI,CAACA,QAAL,EAAe;AACb,aAAO,KAAP;AACD;AACD,QAAI,oBAAYA,SAASC,SAAT,EAAZ,EAAkCC,MAAlC,KAA6C,CAAjD,EAAoD;AAClD,aAAO,KAAP;AACD;AACF,GAPD,CAOE,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACD,SAAO,IAAP;AACD;;kBAEe,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AACrDA,UAAQC,IAAR,CACE,eADF,EAEE,CAACC,MAAD,EAAa,EAAEC,YAAF,EAAgBC,MAAhB,EAAwBC,SAAS,EAAEC,iBAAF,EAAjC,EAAb,KAA0E;AACxE,UAAMX,WAAWQ,aACfG,iBADe,EAEf;AACEC,YAAM,UADR;AAEEC,mBACE;AAHJ,KAFe,EAOf,EAAEC,gBAAgB,IAAlB,EAPe,EAQf,IARe,CAAjB;AAUA,QAAIf,gBAAgBC,QAAhB,CAAJ,EAA+B;AAC7B,aAAOS,OAAOF,MAAP,EAAe;AACpBQ,kBAAUf;AADU,OAAf,CAAP;AAGD,KAJD,MAIO;AACL,aAAOO,MAAP;AACD;AACF,GApBH;AAsBD,C","file":"MutationPlugin.js","sourcesContent":["// @flow\nimport type { Plugin } from \"../SchemaBuilder\";\n\nfunction isValidMutation(Mutation) {\n  try {\n    if (!Mutation) {\n      return false;\n    }\n    if (Object.keys(Mutation.getFields()).length === 0) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\nexport default (async function MutationPlugin(builder) {\n  builder.hook(\n    \"GraphQLSchema\",\n    (schema: {}, { newWithHooks, extend, graphql: { GraphQLObjectType } }) => {\n      const Mutation = newWithHooks(\n        GraphQLObjectType,\n        {\n          name: \"Mutation\",\n          description:\n            \"The root mutation type which contains root level fields which mutate data.\",\n        },\n        { isRootMutation: true },\n        true\n      );\n      if (isValidMutation(Mutation)) {\n        return extend(schema, {\n          mutation: Mutation,\n        });\n      } else {\n        return schema;\n      }\n    }\n  );\n}: Plugin);\n"]}