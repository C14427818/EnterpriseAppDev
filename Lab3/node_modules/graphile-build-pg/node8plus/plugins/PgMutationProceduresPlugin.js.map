{"version":3,"sources":["../../src/plugins/PgMutationProceduresPlugin.js"],"names":["PgMutationProceduresPlugin","builder","hook","fields","build","scope","isRootMutation","fieldWithHooks","extend","pgIntrospectionResultsByKind","introspectionResultsByKind","pgInflection","inflection","procedure","filter","proc","isStable","namespace","reduce","memo","fieldName","functionName","name","isMutation"],"mappings":";;;;;;AAEA;;;;;;kBAEgB,SAASA,0BAAT,CAAoCC,OAApC,EAA6C;AAC3DA,UAAQC,IAAR,CACE,0BADF,EAEE,CAACC,MAAD,EAASC,KAAT,EAAgB,EAAEC,OAAO,EAAEC,cAAF,EAAT,EAA6BC,cAA7B,EAAhB,KAAkE;AAChE,QAAI,CAACD,cAAL,EAAqB;AACnB,aAAOH,MAAP;AACD;AACD,UAAM;AACJK,YADI;AAEJC,oCAA8BC,0BAF1B;AAGJC,oBAAcC;AAHV,QAIFR,KAJJ;AAKA,WAAOI,OACLL,MADK,EAELO,2BAA2BG,SAA3B,CACGC,MADH,CACUC,QAAQ,CAACA,KAAKC,QADxB,EAEGF,MAFH,CAEUC,QAAQ,CAAC,CAACA,KAAKE,SAFzB,EAGGC,MAHH,CAGU,CAACC,IAAD,EAAOJ,IAAP,KAAgB;AACtB;;;;;;;;;;;;;;;AAeA,YAAMK,YAAYR,WAAWS,YAAX,CAChBN,KAAKO,IADW,EAEhBP,KAAKE,SAAL,CAAeK,IAFC,CAAlB;AAIAH,WAAKC,SAAL,IAAkB,6BAAcA,SAAd,EAAyBL,IAAzB,EAA+BX,KAA/B,EAAsC;AACtDG,sBADsD;AAEtDgB,oBAAY;AAF0C,OAAtC,CAAlB;AAIA,aAAOJ,IAAP;AACD,KA5BH,EA4BK,EA5BL,CAFK,EA+BJ,kDA/BI,CAAP;AAiCD,GA5CH;AA8CD,C","file":"PgMutationProceduresPlugin.js","sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\nimport makeProcField from \"./makeProcField\";\n\nexport default (function PgMutationProceduresPlugin(builder) {\n  builder.hook(\n    \"GraphQLObjectType:fields\",\n    (fields, build, { scope: { isRootMutation }, fieldWithHooks }) => {\n      if (!isRootMutation) {\n        return fields;\n      }\n      const {\n        extend,\n        pgIntrospectionResultsByKind: introspectionResultsByKind,\n        pgInflection: inflection,\n      } = build;\n      return extend(\n        fields,\n        introspectionResultsByKind.procedure\n          .filter(proc => !proc.isStable)\n          .filter(proc => !!proc.namespace)\n          .reduce((memo, proc) => {\n            /*\n            proc =\n              { kind: 'procedure',\n                name: 'integration_webhook_secret',\n                description: null,\n                namespaceId: '6484381',\n                isStrict: false,\n                returnsSet: false,\n                isStable: true,\n                returnTypeId: '2950',\n                argTypeIds: [ '6484569' ],\n                argNames: [ 'integration' ],\n                argDefaultsNum: 0 }\n            */\n\n            const fieldName = inflection.functionName(\n              proc.name,\n              proc.namespace.name\n            );\n            memo[fieldName] = makeProcField(fieldName, proc, build, {\n              fieldWithHooks,\n              isMutation: true,\n            });\n            return memo;\n          }, {}),\n        `Adding mutation procedure to root Mutation field`\n      );\n    }\n  );\n}: Plugin);\n"]}