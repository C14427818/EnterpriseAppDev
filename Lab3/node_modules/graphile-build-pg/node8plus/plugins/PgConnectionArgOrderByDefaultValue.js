"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require("babel-runtime/core-js/object/assign");

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function PgConnectionArgOrderByDefaultValue(builder, { pgInflection: inflection }) {
  builder.hook("GraphQLObjectType:fields:field:args", (args, { extend, getTypeByName, pgGetGqlTypeByTypeId }, {
    scope: { isPgFieldConnection, pgFieldIntrospection: table },
    Self,
    field
  }) => {
    if (!isPgFieldConnection || !table || table.kind !== "class" || !table.namespace || !table.isSelectable) {
      return args;
    }
    const TableType = pgGetGqlTypeByTypeId(table.type.id);
    const tableTypeName = TableType.name;
    const TableOrderByType = getTypeByName(inflection.orderByType(tableTypeName));

    const defaultValueEnum = TableOrderByType.getValues().find(v => v.name === "PRIMARY_KEY_ASC") || TableOrderByType.getValues()[0];

    return (0, _assign2.default)({}, args, {
      orderBy: extend(args.orderBy, {
        defaultValue: defaultValueEnum && [defaultValueEnum.value]
      }, `Adding defaultValue to orderBy for field '${field.name}' of '${Self.name}'`)
    });
  });
};
//# sourceMappingURL=PgConnectionArgOrderByDefaultValue.js.map