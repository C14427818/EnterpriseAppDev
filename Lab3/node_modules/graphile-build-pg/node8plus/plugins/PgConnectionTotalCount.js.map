{"version":3,"sources":["../../src/plugins/PgConnectionTotalCount.js"],"names":["PgConnectionTotalCount","builder","hook","fields","extend","pgInflection","inflection","graphql","GraphQLInt","scope","isPgRowConnectionType","pgIntrospection","table","fieldWithHooks","Self","kind","namespace","tableTypeName","tableType","name","totalCount","addDataGenerator","pgCalculateTotalCount","description","type","isPgConnectionTotalCountField"],"mappings":";;;;;;kBAGgB,SAASA,sBAAT,CAAgCC,OAAhC,EAAyC;AACvDA,UAAQC,IAAR,CACE,0BADF,EAEE,CACEC,MADF,EAEE,EAAEC,MAAF,EAAUC,cAAcC,UAAxB,EAAoCC,SAAS,EAAEC,UAAF,EAA7C,EAFF,EAGE;AACEC,WAAO,EAAEC,qBAAF,EAAyBC,iBAAiBC,KAA1C,EADT;AAEEC,kBAFF;AAGEC;AAHF,GAHF,KAQK;AACH,QACE,CAACJ,qBAAD,IACA,CAACE,KADD,IAEAA,MAAMG,IAAN,KAAe,OAFf,IAGA,CAACH,MAAMI,SAJT,EAKE;AACA,aAAOb,MAAP;AACD;AACD,UAAMc,gBAAgBX,WAAWY,SAAX,CACpBN,MAAMO,IADc,EAEpBP,MAAMI,SAAN,CAAgBG,IAFI,CAAtB;AAIA,WAAOf,OACLD,MADK,EAEL;AACEiB,kBAAYP,eACV,YADU,EAEV,CAAC,EAAEQ,gBAAF,EAAD,KAA0B;AACxBA,yBAAiB,MAAM;AACrB,iBAAO;AACLC,mCAAuB;AADlB,WAAP;AAGD,SAJD;AAKA,eAAO;AACLC,uBAAc,wBAAuBN,aAAc,uCAD9C;AAELO,gBAAMhB;AAFD,SAAP;AAID,OAZS,EAaV;AACEiB,uCAA+B;AADjC,OAbU;AADd,KAFK,EAqBJ,oCAAmCX,KAAKK,IAAK,GArBzC,CAAP;AAuBD,GA9CH;AAgDD,C","file":"PgConnectionTotalCount.js","sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\n\nexport default (function PgConnectionTotalCount(builder) {\n  builder.hook(\n    \"GraphQLObjectType:fields\",\n    (\n      fields,\n      { extend, pgInflection: inflection, graphql: { GraphQLInt } },\n      {\n        scope: { isPgRowConnectionType, pgIntrospection: table },\n        fieldWithHooks,\n        Self,\n      }\n    ) => {\n      if (\n        !isPgRowConnectionType ||\n        !table ||\n        table.kind !== \"class\" ||\n        !table.namespace\n      ) {\n        return fields;\n      }\n      const tableTypeName = inflection.tableType(\n        table.name,\n        table.namespace.name\n      );\n      return extend(\n        fields,\n        {\n          totalCount: fieldWithHooks(\n            \"totalCount\",\n            ({ addDataGenerator }) => {\n              addDataGenerator(() => {\n                return {\n                  pgCalculateTotalCount: true,\n                };\n              });\n              return {\n                description: `The count of *all* \\`${tableTypeName}\\` you could get from the connection.`,\n                type: GraphQLInt,\n              };\n            },\n            {\n              isPgConnectionTotalCountField: true,\n            }\n          ),\n        },\n        `Adding totalCount to connection '${Self.name}'`\n      );\n    }\n  );\n}: Plugin);\n"]}