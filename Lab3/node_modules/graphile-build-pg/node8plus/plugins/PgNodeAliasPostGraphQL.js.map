{"version":3,"sources":["../../src/plugins/PgNodeAliasPostGraphQL.js"],"names":["PgNodeAliasPostGraphQL","builder","hook","object","setNodeAlias","scope","isPgRowType","isPgCompoundType","pgIntrospection","table","name"],"mappings":";;;;;;AAGA;;;;;;kBAEgB,eAAeA,sBAAf,CAAsCC,OAAtC,EAA+C;AAC7DA,UAAQC,IAAR,CACE,mBADF,EAEE,CACEC,MADF,EAEE,EAAEC,YAAF,EAFF,EAGE,EAAEC,OAAO,EAAEC,WAAF,EAAeC,gBAAf,EAAiCC,iBAAiBC,KAAlD,EAAT,EAHF,KAIK;AACH,QAAIH,eAAeC,gBAAnB,EAAqC;AACnCH,mBAAaD,OAAOO,IAApB,EAA0B,yBAAUD,MAAMC,IAAhB,CAA1B;AACD;AACD,WAAOP,MAAP;AACD,GAXH;AAaD,C","file":"PgNodeAliasPostGraphQL.js","sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\n\nimport pluralize from \"pluralize\";\n\nexport default (async function PgNodeAliasPostGraphQL(builder) {\n  builder.hook(\n    \"GraphQLObjectType\",\n    (\n      object,\n      { setNodeAlias },\n      { scope: { isPgRowType, isPgCompoundType, pgIntrospection: table } }\n    ) => {\n      if (isPgRowType || isPgCompoundType) {\n        setNodeAlias(object.name, pluralize(table.name));\n      }\n      return object;\n    }\n  );\n}: Plugin);\n"]}