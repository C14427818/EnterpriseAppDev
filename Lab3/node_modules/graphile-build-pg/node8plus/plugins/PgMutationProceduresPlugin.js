"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _makeProcField = require("./makeProcField");

var _makeProcField2 = _interopRequireDefault(_makeProcField);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function PgMutationProceduresPlugin(builder) {
  builder.hook("GraphQLObjectType:fields", (fields, build, { scope: { isRootMutation }, fieldWithHooks }) => {
    if (!isRootMutation) {
      return fields;
    }
    const {
      extend,
      pgIntrospectionResultsByKind: introspectionResultsByKind,
      pgInflection: inflection
    } = build;
    return extend(fields, introspectionResultsByKind.procedure.filter(proc => !proc.isStable).filter(proc => !!proc.namespace).reduce((memo, proc) => {
      /*
      proc =
        { kind: 'procedure',
          name: 'integration_webhook_secret',
          description: null,
          namespaceId: '6484381',
          isStrict: false,
          returnsSet: false,
          isStable: true,
          returnTypeId: '2950',
          argTypeIds: [ '6484569' ],
          argNames: [ 'integration' ],
          argDefaultsNum: 0 }
      */

      const fieldName = inflection.functionName(proc.name, proc.namespace.name);
      memo[fieldName] = (0, _makeProcField2.default)(fieldName, proc, build, {
        fieldWithHooks,
        isMutation: true
      });
      return memo;
    }, {}), `Adding mutation procedure to root Mutation field`);
  });
};
//# sourceMappingURL=PgMutationProceduresPlugin.js.map